# only build pull requests and merges to master or dev
# adapted from https://stackoverflow.com/a/31882307
if: (type = push AND branch IN (master, dev)) OR (type = pull_request AND NOT branch =~ /no-ci/)
dist: xenial
sudo: required

services:
- docker

jobs:
  include:
  - stage: Tests

    name: Unit Tests (clang, debug mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make"

    name: Unit Tests (gcc, debug mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make"

  - name: Unit Tests (clang, full debug mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make fulldebug"

  - name: Unit Tests (gcc, full debug mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make fulldebug"

  - name: Unit Tests (clang, opt mode)
    env: CXX=clang++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make opt"

  - name: Unit Tests (gcc, opt mode)
    env: CXX=g++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN -e CXX -i mmore500/double-duty-canvas /bin/bash -c "set -x && cd /opt/double-duty-canvas/tests && make opt"

  - name: Coverage
    env: CXX=clang++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - ci_env=`bash <(curl -s https://codecov.io/env)`
    - sudo docker run $ci_env -e CXX mmore500/double-duty-canvas /bin/bash -c "cd /opt/double-duty-canvas && make coverage && bash <(curl -s https://codecov.io/bash)"

  - name: Source (clang)
    env: CXX=clang++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN mmore500/double-duty-canvas /bin/bash -c "cd /opt/double-duty-canvas && make test"

  - name: Source (gcc)
    env: CXX=g++
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run -e CXX --cap-add=SYS_ADMIN mmore500/double-duty-canvas /bin/bash -c "cd /opt/double-duty-canvas && make test"

  - name: Docs
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - sudo docker run mmore500/double-duty-canvas /bin/bash -c "cd /opt/double-duty-canvas && make docs"


  - stage: Deploy
    name: GitHub Pages
    if: (type = push AND branch IN (master))
    install:
    - docker build -t mmore500/double-duty-canvas .
    - docker ps -a
    script:
    - docker run -e GH_TOKEN -e TRAVIS_BUILD_NUMBER mmore500/double-duty-canvas /bin/bash -c "cd /opt/double-duty-canvas && source third-party/emsdk/emsdk_env.sh && make web && make badges && ./ci/deploy_gh_pages.sh"

  # - name: DockerHub
  #   if: (type = push AND branch IN (master))
  #   install:
  #   - docker build -t mmore500/double-duty-canvas .
  #   - docker ps -a
  #   script:
  #   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #   - docker push mmore500/double-duty-canvas
